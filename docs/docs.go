// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "READMEOW Support",
            "email": "readmeow@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Log in a user with login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login response",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Logout a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/newcode": {
            "post": {
                "description": "Sending a new code for user verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Send New Code",
                "parameters": [
                    {
                        "description": "SendNewCodeRequest Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SendNewCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/auth/profile": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetching the logged-in user's info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Profile",
                "responses": {
                    "200": {
                        "description": "User info response",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "description": "Register a verified user with email and verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Register Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/auth/verify": {
            "post": {
                "description": "Verifying a user by sending a verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Verify Email",
                "parameters": [
                    {
                        "description": "Verification Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.VerifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/readmes": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns list of readmes for the authorized user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readmes"
                ],
                "summary": "Fetch User Readmes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pagination amount",
                        "name": "amount",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Pagination page",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ReadmeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creating a new readme",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readmes"
                ],
                "summary": "Create Readme",
                "parameters": [
                    {
                        "type": "string",
                        "format": "binary",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "links",
                        "in": "formData"
                    },
                    {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "render_order",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "template_id",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/readmes/{readme}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns single readme by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readmes"
                ],
                "summary": "Get Readme by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Readme ID",
                        "name": "readme",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/models.Readme"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deleting a user readme by its id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readmes"
                ],
                "summary": "Delete Readme",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Readme ID",
                        "name": "readme",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updating existing readme by id",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Readmes"
                ],
                "summary": "Update Readme",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "binary",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "links",
                        "in": "formData"
                    },
                    {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "render_order",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/templates": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Search templates with filters and sorting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Search Templates",
                "parameters": [
                    {
                        "description": "Search templates request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchTemplateRequestDoc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of templates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TemplateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creating a new template",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Create Template",
                "parameters": [
                    {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "binary",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "is_public",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "links",
                        "in": "formData"
                    },
                    {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "render_order",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updating a user template",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Update Template",
                "parameters": [
                    {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "binary",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "name": "is_public",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "links",
                        "in": "formData"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "render_order",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "text",
                        "in": "formData"
                    },
                    {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string",
                        "name": "title",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/templates/dislike/{template}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Dislike template by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Dislike Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already disliked",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/templates/favorite": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetch favorite templates of current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Fetch Favorite Templates",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of favorite templates",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TemplateResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/templates/like/{template}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Like template by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Like Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already liked",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/templates/{template}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get template by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Get Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template data",
                        "schema": {
                            "$ref": "#/definitions/models.Template"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Deleting a user template by its id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Templates"
                ],
                "summary": "Delete Template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Template ID",
                        "name": "template",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete current user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "description": "Delete user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user's profile (nickname, avatar, etc.)",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "format": "binary",
                        "name": "avatar",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string",
                        "name": "nickname",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/users/password": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change password for current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change User Password",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/users/{user}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/dto.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/widgets": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Searching widgets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widgets"
                ],
                "summary": "Search Widgets",
                "parameters": [
                    {
                        "description": "Search widgets request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchWidgetRequestDoc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of widgets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.WidgetResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Creating a new widget",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widgets"
                ],
                "summary": "Create Widget",
                "parameters": [
                    {
                        "maxLength": 1000,
                        "minLength": 1,
                        "type": "string",
                        "name": "description",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "binary",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "link",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "tags",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 80,
                        "minLength": 1,
                        "type": "string",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "name": "type",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.IdResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/widgets/dislike/{widget}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Dislike widget by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widgets"
                ],
                "summary": "Dislike Widget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Widget ID",
                        "name": "widget",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/widgets/favorite": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Fetch favorite widgets of current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widgets"
                ],
                "summary": "Fetch Favorite Widgets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "amount",
                        "in": "query",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of favorite widgets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.WidgetResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/widgets/like/{widget}": {
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Like widget by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widgets"
                ],
                "summary": "Like Widget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Widget ID",
                        "name": "widget",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success response",
                        "schema": {
                            "$ref": "#/definitions/dto.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "409": {
                        "description": "Already exists",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        },
        "/api/widgets/{widget}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get widget by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Widgets"
                ],
                "summary": "Get Widget",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Widget ID",
                        "name": "widget",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Widget data",
                        "schema": {
                            "$ref": "#/definitions/models.Widget"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ApiErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ChangePasswordRequest": {
            "type": "object",
            "required": [
                "new_password",
                "old_password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "minLength": 12
                },
                "old_password": {
                    "type": "string",
                    "minLength": 12
                }
            }
        },
        "dto.DeleteUserRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 12
                }
            }
        },
        "dto.IdResponse": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "message": {
                    "type": "string",
                    "example": "readme created successfully"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "password": {
                    "type": "string",
                    "minLength": 12
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "required": [
                "avatar",
                "id",
                "nickname"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                }
            }
        },
        "dto.ReadmeResponse": {
            "type": "object",
            "required": [
                "create_time",
                "id",
                "image",
                "last_update_time",
                "title"
            ],
            "properties": {
                "create_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.RegisterRequest": {
            "type": "object",
            "required": [
                "code",
                "email"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "minLength": 6
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "dto.SearchTemplateRequestDoc": {
            "type": "object",
            "required": [
                "amount",
                "page"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 1
                },
                "filter": {
                    "$ref": "#/definitions/dto.filterTemplatesFields"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "query": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/definitions/dto.sortTemplatesFields"
                }
            }
        },
        "dto.SearchWidgetRequestDoc": {
            "type": "object",
            "required": [
                "amount",
                "page"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 1
                },
                "filter": {
                    "$ref": "#/definitions/dto.filterWidgetsFields"
                },
                "page": {
                    "type": "integer",
                    "minimum": 1
                },
                "query": {
                    "type": "string"
                },
                "sort": {
                    "$ref": "#/definitions/dto.sortWidgetsFields"
                }
            }
        },
        "dto.SendNewCodeRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "dto.SuccessResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "dto.TemplateInfo": {
            "type": "object",
            "required": [
                "description",
                "id",
                "image",
                "last_update_time",
                "likes",
                "num_of_users",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "minLength": 1
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer",
                    "minimum": 0
                },
                "num_of_users": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "dto.TemplateResponse": {
            "type": "object",
            "required": [
                "description",
                "id",
                "image",
                "last_update_time",
                "likes",
                "num_of_users",
                "owner_avatar",
                "owner_id",
                "owner_nickname",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "minLength": 1
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer",
                    "minimum": 0
                },
                "num_of_users": {
                    "type": "integer",
                    "minimum": 0
                },
                "owner_avatar": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "owner_nickname": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "dto.UserResponse": {
            "type": "object",
            "required": [
                "avatar",
                "email",
                "id",
                "nickname",
                "num_of_readmes",
                "num_of_templates",
                "templates",
                "time_of_register"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string",
                    "minLength": 1
                },
                "num_of_readmes": {
                    "type": "integer",
                    "minimum": 0
                },
                "num_of_templates": {
                    "type": "integer",
                    "minimum": 0
                },
                "templates": {
                    "type": "array",
                    "minItems": 0,
                    "items": {
                        "$ref": "#/definitions/dto.TemplateInfo"
                    }
                },
                "time_of_register": {
                    "type": "string"
                }
            }
        },
        "dto.VerifyRequest": {
            "type": "object",
            "required": [
                "email",
                "login",
                "nickname",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "login": {
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "nickname": {
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "password": {
                    "type": "string",
                    "minLength": 12
                }
            }
        },
        "dto.WidgetResponse": {
            "type": "object",
            "required": [
                "description",
                "id",
                "image",
                "likes",
                "num_of_users",
                "title"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer",
                    "minimum": 0
                },
                "num_of_users": {
                    "type": "integer",
                    "minimum": 0
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.filterTemplatesFields": {
            "type": "object",
            "properties": {
                "isOfficial": {
                    "type": "boolean"
                }
            }
        },
        "dto.filterWidgetsFields": {
            "type": "object",
            "properties": {
                "Tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.sortTemplatesFields": {
            "type": "object",
            "properties": {
                "LastUpdateTime": {
                    "type": "string",
                    "example": "desc/asc"
                },
                "Likes": {
                    "type": "string",
                    "example": "desc/asc"
                },
                "NumOfUsers": {
                    "type": "string",
                    "example": "desc/asc"
                }
            }
        },
        "dto.sortWidgetsFields": {
            "type": "object",
            "properties": {
                "Likes": {
                    "type": "string",
                    "example": "desc/asc"
                },
                "NumOfUsers": {
                    "type": "string",
                    "example": "desc/asc"
                }
            }
        },
        "helpers.ApiErr": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {}
            }
        },
        "models.Readme": {
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "last_update_time": {
                    "type": "string"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "owner_id": {
                    "type": "string"
                },
                "render_order": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template_id": {
                    "type": "string"
                },
                "text": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "models.Template": {
            "type": "object",
            "properties": {
                "create_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "is_public": {
                    "type": "boolean"
                },
                "last_update_time": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "num_of_users": {
                    "type": "integer"
                },
                "owner_id": {
                    "type": "string"
                },
                "render_order": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "models.Widget": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "likes": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "num_of_users": {
                    "type": "integer"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "localhost:3333",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "REODMEOW API",
	Description:      "Documentation to READMEOW API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
