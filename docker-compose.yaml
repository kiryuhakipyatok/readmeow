services:
  readmeow:
  #  build: ./
    image: kiryuhakipyatok/readmeow:latest
    env_file:
      - .env
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      es:
        condition: service_healthy
    networks:
      - app-network
    stop_grace_period: 5s

  postgres:
    image: postgres:latest
    volumes:
      - .db/postgres/data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - app-network
    stop_grace_period: 5s

  redis:
    image: redis:latest
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    stop_grace_period: 5s

  es:
    image: elasticsearch:9.1.0
    env_file:
      - .env
    ports:
      - ${ELASTICSEARCH_PORT}:9200
    environment:
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - discovery.type=single-node
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network
    stop_grace_period: 5s

  migrate:
  #  build: ./
    image: kiryuhakipyatok/migrate:latest
    env_file:
      - .env
    volumes:
      - ./internal/migrations:/migrations
    entrypoint: ["goose", "-dir", "/migrations"]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
    external: true
